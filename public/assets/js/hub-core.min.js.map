{
  "version": 3,
  "sources": ["../../../assets/js/hub-core.js"],
  "sourcesContent": ["/**\n * Hub Core JavaScript Module\n * Path: /assets/js/hub-core.js\n * Handles all hub functionality for both characters and women hubs\n * Updated to handle multi-page character studies with subdirectories\n */\n\nclass HubCore {\n    constructor(options = {}) {\n        this.type = options.type || 'characters'; // 'characters' or 'women'\n        this.filterGender = options.filterGender || null; // null, 'male', or 'female'\n        this.loader = null;\n        this.currentBook = null;\n        this.initialized = false;\n        \n        // Wait for DOM to be ready\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', () => this.init());\n        } else {\n            this.init();\n        }\n    }\n\n    async init() {\n        if (this.initialized) return;\n        \n        try {\n            // Import the CharacterLoader module\n            const { default: CharacterLoader } = await import('./character-loader.js');\n            this.loader = new CharacterLoader({ \n                filterGender: this.filterGender \n            });\n            \n            // Initialize the loader and get manifest\n            await this.loader.initialize();\n            \n            // Setup all event listeners\n            this.setupEventListeners();\n            \n            // Animate stats if they exist\n            this.animateStats();\n            \n            // Load featured characters\n            this.loadFeaturedCharacters();\n            \n            // Setup mobile menu\n            this.setupMobileMenu();\n            \n            // Setup scroll effects\n            this.setupScrollEffects();\n            \n            this.initialized = true;\n            \n        } catch (error) {\n            console.error('Failed to initialize hub:', error);\n            this.showError('Failed to initialize. Please refresh the page.');\n        }\n    }\n\n    /**\n     * Setup all event listeners\n     */\n    setupEventListeners() {\n        // Main tab switching (Tanakh vs New Testament)\n        document.querySelectorAll('.main-tab-button').forEach(button => {\n            button.addEventListener('click', (e) => this.handleMainTabClick(e));\n        });\n\n        // Sub-tab switching (Torah, Prophets, Writings)\n        document.querySelectorAll('.sub-tab-button').forEach(button => {\n            button.addEventListener('click', (e) => this.handleSubTabClick(e));\n        });\n\n        // Book row clicks\n        document.querySelectorAll('tr[data-book]').forEach(row => {\n            row.addEventListener('click', (e) => this.handleBookClick(e));\n        });\n\n        // Quick link smooth scrolling\n        document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n            anchor.addEventListener('click', (e) => this.handleAnchorClick(e));\n        });\n    }\n\n    /**\n     * Handle main tab clicks\n     */\n    handleMainTabClick(event) {\n        const button = event.currentTarget;\n        const section = button.dataset.section;\n        \n        // Update active states\n        document.querySelectorAll('.main-tab-button').forEach(btn => {\n            btn.classList.remove('active');\n        });\n        button.classList.add('active');\n        \n        // Show/hide content\n        document.querySelectorAll('.tab-content').forEach(content => {\n            content.classList.remove('active');\n        });\n        \n        const targetContent = document.getElementById(`${section}-content`);\n        if (targetContent) {\n            targetContent.classList.add('active');\n        }\n    }\n\n    /**\n     * Handle sub-tab clicks\n     */\n    handleSubTabClick(event) {\n        const button = event.currentTarget;\n        const category = button.dataset.category;\n        \n        // Find the parent nav group\n        const navGroup = button.closest('.sub-tabs-nav');\n        \n        // Update active states within this group only\n        navGroup.querySelectorAll('.sub-tab-button').forEach(btn => {\n            btn.classList.remove('active');\n        });\n        button.classList.add('active');\n        \n        // Hide all sub-tab-content\n        document.querySelectorAll('.sub-tab-content').forEach(content => {\n            content.classList.remove('active');\n        });\n        \n        // Show the selected category\n        const targetContent = document.getElementById(`${category}-category`);\n        if (targetContent) {\n            targetContent.classList.add('active');\n        }\n    }\n\n    /**\n     * Handle book row clicks\n     */\n    async handleBookClick(event) {\n        const row = event.currentTarget;\n        const bookId = row.dataset.book;\n        \n        if (!bookId) return;\n        \n        // Prevent multiple clicks\n        if (this.currentBook === bookId && this.isLoading) return;\n        \n        this.currentBook = bookId;\n        await this.loadBookCharacters(bookId);\n    }\n\n    /**\n     * Handle anchor link clicks for smooth scrolling\n     */\n    handleAnchorClick(event) {\n        event.preventDefault();\n        const target = document.querySelector(event.currentTarget.getAttribute('href'));\n        if (target) {\n            const offsetTop = target.offsetTop - 100; // Account for fixed nav\n            window.scrollTo({\n                top: offsetTop,\n                behavior: 'smooth'\n            });\n        }\n    }\n\n    /**\n     * Load and display book characters\n     */\n    async loadBookCharacters(bookId) {\n        const section = document.getElementById('book-data-section');\n        const loading = document.getElementById('book-loading');\n        const dataEl = document.getElementById('book-data');\n        \n        if (!section || !loading || !dataEl) {\n            console.error('Required elements not found');\n            return;\n        }\n        \n        // Show loading state\n        section.style.display = 'block';\n        loading.style.display = 'flex';\n        dataEl.style.display = 'none';\n        this.isLoading = true;\n        \n        try {\n            // Load book data (already filtered by CharacterLoader if filterGender is set)\n            const data = await this.loader.loadBook(bookId);\n            \n            if (!data || !data.characters || data.characters.length === 0) {\n                // Customize message based on filter\n                let emptyMessage = 'No Characters Found';\n                let emptySubtext = 'This book doesn\\'t have any character profiles yet';\n                \n                if (this.filterGender === 'female') {\n                    emptyMessage = 'No Women Recorded';\n                    emptySubtext = 'This book does not contain any women profiles';\n                } else if (this.filterGender === 'male') {\n                    emptyMessage = 'No Men Recorded';\n                    emptySubtext = 'This book does not contain any men profiles';\n                }\n                \n                dataEl.innerHTML = `\n                    <div class=\"empty-state\">\n                        <div class=\"empty-state-icon\">\uD83D\uDCDA</div>\n                        <div class=\"empty-state-text\">${emptyMessage}</div>\n                        <div class=\"empty-state-subtext\">${emptySubtext}</div>\n                    </div>\n                `;\n            } else {\n                // Render character cards\n                this.renderCharacterCards(data, dataEl);\n            }\n            \n            // Hide loading, show data\n            loading.style.display = 'none';\n            dataEl.style.display = 'block';\n            \n            // Smooth scroll to content\n            setTimeout(() => {\n                section.scrollIntoView({ \n                    behavior: 'smooth', \n                    block: 'nearest' \n                });\n            }, 100);\n            \n        } catch (error) {\n            console.error('Error loading book:', error);\n            dataEl.innerHTML = `\n                <div class=\"empty-state\">\n                    <div class=\"empty-state-icon\">\u26A0\uFE0F</div>\n                    <div class=\"empty-state-text\">Failed to Load Characters</div>\n                    <div class=\"empty-state-subtext\">Please try again or refresh the page</div>\n                </div>\n            `;\n            loading.style.display = 'none';\n            dataEl.style.display = 'block';\n        } finally {\n            this.isLoading = false;\n        }\n    }\n\n    /**\n     * Render character cards in the data element\n     * FIXED: Now properly respects the filterGender setting\n     */\n    renderCharacterCards(data, container) {\n        const bookName = data.book?.name || 'Book';\n        const bookId = data.book?.id || 'book';\n        \n        // CRITICAL FIX: Respect the gender filter\n        // If filterGender is set, only show that gender\n        // If not set, show all characters separated by gender\n        \n        let html = '';\n        \n        if (this.filterGender === 'female') {\n            // Women's hub - only show women\n            const women = data.characters.filter(c => c.gender === 'female');\n            \n            if (women.length === 0) {\n                html = `\n                    <div class=\"empty-state\">\n                        <div class=\"empty-state-icon\">\uD83D\uDCD6</div>\n                        <div class=\"empty-state-text\">No Women in ${bookName}</div>\n                        <div class=\"empty-state-subtext\">This book does not contain any women profiles</div>\n                    </div>\n                `;\n            } else {\n                // Separate named and unnamed women\n                const named = women.filter(w => !w.tags?.includes('Unnamed'));\n                const unnamed = women.filter(w => w.tags?.includes('Unnamed'));\n                \n                html = `<h3 class=\"section-title\">Women in ${bookName}</h3>`;\n                \n                if (named.length > 0) {\n                    html += `\n                        <div class=\"section-header\">\n                            <h4 class=\"section-title\">Named Women</h4>\n                            <p class=\"section-subtitle\">${named.length} women with recorded names</p>\n                        </div>\n                        <div class=\"cards-grid\">\n                            ${named.map(char => this.createCharacterCard(char, bookId)).join('')}\n                        </div>\n                    `;\n                }\n                \n                if (unnamed.length > 0) {\n                    html += `\n                        <div class=\"section-header\">\n                            <h4 class=\"section-title\">Unnamed Women</h4>\n                            <p class=\"section-subtitle\">${unnamed.length} women identified by role or relationship</p>\n                        </div>\n                        <div class=\"cards-grid\">\n                            ${unnamed.map(char => this.createCharacterCard(char, bookId)).join('')}\n                        </div>\n                    `;\n                }\n            }\n            \n        } else if (this.filterGender === 'male') {\n            // Men only filter - only show men\n            const men = data.characters.filter(c => c.gender === 'male');\n            \n            html = `<h3 class=\"section-title\">Men in ${bookName}</h3>`;\n            \n            if (men.length > 0) {\n                html += `\n                    <div class=\"cards-grid\">\n                        ${men.map(char => this.createCharacterCard(char, bookId)).join('')}\n                    </div>\n                `;\n            } else {\n                html = `\n                    <div class=\"empty-state\">\n                        <div class=\"empty-state-icon\">\uD83D\uDCD6</div>\n                        <div class=\"empty-state-text\">No Men in ${bookName}</div>\n                        <div class=\"empty-state-subtext\">This book does not contain any men profiles</div>\n                    </div>\n                `;\n            }\n            \n        } else {\n            // No filter - show all characters separated by gender (original behavior)\n            const men = data.characters.filter(c => c.gender === 'male');\n            const women = data.characters.filter(c => c.gender === 'female');\n            const unknown = data.characters.filter(c => !c.gender || c.gender === 'unknown');\n            \n            html = `<h3 class=\"section-title\">${bookName} Characters</h3>`;\n            \n            // Render men section if exists\n            if (men.length > 0) {\n                html += `\n                    <div class=\"section-header\">\n                        <h4 class=\"section-title\">Men</h4>\n                        <p class=\"section-subtitle\">${men.length} male character${men.length > 1 ? 's' : ''}</p>\n                    </div>\n                    <div class=\"cards-grid\">\n                        ${men.map(char => this.createCharacterCard(char, bookId)).join('')}\n                    </div>\n                `;\n            }\n            \n            // Render women section if exists\n            if (women.length > 0) {\n                html += `\n                    <div class=\"section-header\">\n                        <h4 class=\"section-title\">Women</h4>\n                        <p class=\"section-subtitle\">${women.length} female character${women.length > 1 ? 's' : ''}</p>\n                    </div>\n                    <div class=\"cards-grid\">\n                        ${women.map(char => this.createCharacterCard(char, bookId)).join('')}\n                    </div>\n                `;\n            }\n            \n            // Render unknown/other section if exists\n            if (unknown.length > 0) {\n                html += `\n                    <div class=\"section-header\">\n                        <h4 class=\"section-title\">Other Characters</h4>\n                        <p class=\"section-subtitle\">${unknown.length} character${unknown.length > 1 ? 's' : ''}</p>\n                    </div>\n                    <div class=\"cards-grid\">\n                        ${unknown.map(char => this.createCharacterCard(char, bookId)).join('')}\n                    </div>\n                `;\n            }\n        }\n        \n        container.innerHTML = html;\n        \n        // Animate cards in\n        this.animateCardEntrance();\n    }\n\n    /**\n     * Build the correct path for a character profile\n     * Handles multi-page studies that have subdirectories\n     */\n    buildCharacterPath(character, bookId) {\n        // If character has explicit profilePath, use it\n        if (character.profilePath) {\n            return character.profilePath;\n        }\n        \n        // If character has multiPage flag, it's in a subdirectory\n        if (character.multiPage) {\n            return `/studies/characters/${bookId}/${character.id}/${character.id}.html`;\n        }\n        \n        // Standard single-page character\n        return `/studies/characters/${bookId}/${character.id}.html`;\n    }\n\n    /**\n     * Create a single character card HTML\n     */\n    createCharacterCard(character, bookId) {\n        const hebrewText = character.hebrew ? \n            `<span class=\"hebrew\">${character.hebrew}</span>` : '';\n        \n        const tags = (character.tags || []).map(tag => {\n            const tagClass = this.getTagClass(tag);\n            return `<span class=\"tag ${tagClass}\">${tag}</span>`;\n        }).join('');\n        \n        const references = Array.isArray(character.references) ? \n            character.references.join(', ') : character.references || '';\n        \n        const meta = character.meaning ? \n            `${character.meaning} \u2022 ${references}` : references;\n        \n        // Build the correct path\n        const href = this.buildCharacterPath(character, bookId);\n        \n        // Add song link for women with songs\n        const songLink = character.hasSong && character.songPath ? \n            `<a href=\"${character.songPath}\" class=\"song-link\" title=\"View Song\">\n                <span>\uD83C\uDFB5</span> Song\n            </a>` : '';\n        \n        return `\n            <article class=\"study-card\" style=\"opacity: 0;\">\n                <a href=\"${href}\" class=\"study-card-link\">\n                    <div class=\"study-card-header\">\n                        <h4 class=\"study-card-title\">\n                            ${character.name} ${hebrewText}\n                        </h4>\n                        <div class=\"study-card-tags\">${tags}</div>\n                    </div>\n                    <div class=\"study-card-body\">\n                        <p class=\"study-card-meta\">${meta}</p>\n                        <p class=\"study-card-desc\">${character.summary || ''}</p>\n                    </div>\n                    <div class=\"study-card-arrow\">\n                        <svg viewBox=\"0 0 24 24\">\n                            <path d=\"M9 5l7 7-7 7\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/>\n                        </svg>\n                    </div>\n                </a>\n                ${songLink}\n            </article>\n        `;\n    }\n\n    /**\n     * Get appropriate tag class based on tag content\n     */\n    getTagClass(tag) {\n        const lowerTag = tag.toLowerCase();\n        if (lowerTag.includes('group') || lowerTag.includes('unnamed')) {\n            return 'group';\n        }\n        if (lowerTag.includes('warning') || lowerTag.includes('antagonist')) {\n            return 'warning';\n        }\n        return '';\n    }\n\n    /**\n     * Animate card entrance\n     */\n    animateCardEntrance() {\n        const cards = document.querySelectorAll('.study-card[style*=\"opacity: 0\"]');\n        cards.forEach((card, index) => {\n            setTimeout(() => {\n                card.style.opacity = '1';\n                card.style.transform = 'translateY(0)';\n                card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n            }, index * 50); // 50ms stagger\n        });\n    }\n\n    /**\n     * Load featured characters\n     * Updated to respect gender filter\n     */\n    async loadFeaturedCharacters() {\n        const featuredGrid = document.getElementById('featured-grid');\n        if (!featuredGrid) return;\n        \n        let featured = [];\n        \n        if (this.filterGender === 'female') {\n            // Women-only featured characters\n            featured = [\n                { \n                    book: 'judges', \n                    id: 'deborah', \n                    name: 'Deborah', \n                    hebrew: '\u05D3\u05B0\u05BC\u05D1\u05D5\u05B9\u05E8\u05B8\u05D4',\n                    desc: 'Prophet, judge, and military leader. The only female judge who led Israel to victory over Canaanite oppression.',\n                    meta: 'Judges 4-5 \u2022 Multi-page Study',\n                    multiPage: true\n                },\n                { \n                    book: 'genesis', \n                    id: 'sarah', \n                    name: 'Sarah', \n                    hebrew: '\u05E9\u05B8\u05C2\u05E8\u05B8\u05D4',\n                    desc: 'Mother of nations, wife of Abraham. Her story demonstrates faith through struggle with infertility and God\\'s promise fulfillment.',\n                    meta: 'Genesis 11-25 \u2022 Complete Profile',\n                    multiPage: false\n                },\n                { \n                    book: 'ruth', \n                    id: 'ruth', \n                    name: 'Ruth', \n                    hebrew: '\u05E8\u05D5\u05BC\u05EA',\n                    desc: 'Moabite woman whose loyalty and faithfulness led to her becoming great-grandmother of King David.',\n                    meta: 'Book of Ruth \u2022 Complete Profile',\n                    multiPage: false\n                },\n                { \n                    book: 'exodus', \n                    id: 'miriam', \n                    name: 'Miriam', \n                    hebrew: '\u05DE\u05B4\u05E8\u05B0\u05D9\u05B8\u05DD',\n                    desc: 'Prophetess and sister of Moses who led women in worship after crossing the Red Sea.',\n                    meta: 'Exodus \u2022 Complete Profile',\n                    multiPage: false\n                },\n                { \n                    book: 'genesis', \n                    id: 'hagar', \n                    name: 'Hagar', \n                    hebrew: '\u05D4\u05B8\u05D2\u05B8\u05E8',\n                    desc: 'Egyptian servant who became mother of Ishmael. Her encounters with God reveal His compassion for the marginalized.',\n                    meta: 'Genesis 16, 21 \u2022 Complete Profile',\n                    multiPage: false\n                },\n                { \n                    book: 'judges', \n                    id: 'delilah', \n                    name: 'Delilah', \n                    hebrew: '\u05D3\u05B0\u05BC\u05DC\u05B4\u05D9\u05DC\u05B8\u05D4',\n                    desc: 'Philistine woman who betrayed Samson. Her story explores themes of deception, weakness, and divine sovereignty.',\n                    meta: 'Judges 16 \u2022 Complete Profile',\n                    multiPage: false\n                }\n            ];\n        } else {\n            // Default featured characters (mixed gender or all)\n            featured = [\n                { \n                    book: 'genesis', \n                    id: 'abraham', \n                    name: 'Abraham', \n                    hebrew: '\u05D0\u05B7\u05D1\u05B0\u05E8\u05B8\u05D4\u05B8\u05DD',\n                    desc: 'Father of faith, covenant recipient, and patriarch of Israel. His journey from Ur to Canaan exemplifies faith and obedience.',\n                    meta: 'Genesis 11-25 \u2022 Multi-page Study',\n                    multiPage: true\n                },\n                { \n                    book: 'genesis', \n                    id: 'sarah', \n                    name: 'Sarah', \n                    hebrew: '\u05E9\u05B8\u05C2\u05E8\u05B8\u05D4',\n                    desc: 'Mother of nations, wife of Abraham. Her story demonstrates faith through struggle with infertility and God\\'s promise fulfillment.',\n                    meta: 'Genesis 11-25 \u2022 Complete Profile',\n                    multiPage: false\n                },\n                { \n                    book: 'exodus', \n                    id: 'moses', \n                    name: 'Moses', \n                    hebrew: '\u05DE\u05B9\u05E9\u05B6\u05C1\u05D4',\n                    desc: 'Prophet, lawgiver, and deliverer of Israel from Egypt. Central figure in the Exodus and covenant at Sinai.',\n                    meta: 'Exodus-Deuteronomy \u2022 Multi-page Study',\n                    multiPage: true\n                },\n                { \n                    book: 'judges', \n                    id: 'deborah', \n                    name: 'Deborah', \n                    hebrew: '\u05D3\u05B0\u05BC\u05D1\u05D5\u05B9\u05E8\u05B8\u05D4',\n                    desc: 'Prophet, judge, and military leader. The only female judge who led Israel to victory over Canaanite oppression.',\n                    meta: 'Judges 4-5 \u2022 Multi-page Study',\n                    multiPage: true\n                },\n                { \n                    book: 'genesis', \n                    id: 'hagar', \n                    name: 'Hagar', \n                    hebrew: '\u05D4\u05B8\u05D2\u05B8\u05E8',\n                    desc: 'Egyptian servant who became mother of Ishmael. Her encounters with God reveal His compassion for the marginalized.',\n                    meta: 'Genesis 16, 21 \u2022 Complete Profile',\n                    multiPage: false\n                },\n                { \n                    book: 'judges', \n                    id: 'delilah', \n                    name: 'Delilah', \n                    hebrew: '\u05D3\u05B0\u05BC\u05DC\u05B4\u05D9\u05DC\u05B8\u05D4',\n                    desc: 'Philistine woman who betrayed Samson. Her story explores themes of deception, weakness, and divine sovereignty.',\n                    meta: 'Judges 16 \u2022 Complete Profile',\n                    multiPage: false\n                }\n            ];\n        }\n        \n        // Render featured cards with correct paths\n        const html = featured.map(char => {\n            // Build the correct path based on whether it's multi-page\n            const href = char.multiPage \n                ? `/studies/characters/${char.book}/${char.id}/${char.id}.html`\n                : `/studies/characters/${char.book}/${char.id}.html`;\n            \n            return `\n                <a href=\"${href}\" class=\"character-card\">\n                    <div class=\"character-header\">\n                        <div class=\"character-name\">\n                            ${char.name} \n                            <span class=\"character-hebrew\">${char.hebrew}</span>\n                        </div>\n                    </div>\n                    <div class=\"character-body\">\n                        <p class=\"character-desc\">${char.desc}</p>\n                        <div class=\"character-meta\">${char.meta}</div>\n                    </div>\n                </a>\n            `;\n        }).join('');\n        \n        featuredGrid.innerHTML = html;\n    }\n\n    /**\n     * Animate hero stats\n     */\n    animateStats() {\n        document.querySelectorAll('[data-target]').forEach(stat => {\n            const target = parseInt(stat.dataset.target);\n            if (isNaN(target)) return;\n            \n            const increment = target / 50;\n            let current = 0;\n            \n            const timer = setInterval(() => {\n                current += increment;\n                if (current >= target) {\n                    stat.textContent = target + '+';\n                    clearInterval(timer);\n                } else {\n                    stat.textContent = Math.floor(current);\n                }\n            }, 30);\n        });\n    }\n\n    /**\n     * Setup mobile menu functionality\n     */\n    setupMobileMenu() {\n        const toggle = document.getElementById('mobileMenuToggle');\n        const navLinks = document.getElementById('navLinks');\n        \n        if (!toggle || !navLinks) return;\n        \n        toggle.addEventListener('click', () => {\n            toggle.classList.toggle('active');\n            navLinks.classList.toggle('active');\n        });\n        \n        // Close menu when clicking outside\n        document.addEventListener('click', (e) => {\n            if (!e.target.closest('nav')) {\n                toggle.classList.remove('active');\n                navLinks.classList.remove('active');\n            }\n        });\n    }\n\n    /**\n     * Setup scroll effects\n     */\n    setupScrollEffects() {\n        let scrollTimeout;\n        \n        window.addEventListener('scroll', () => {\n            if (scrollTimeout) {\n                window.cancelAnimationFrame(scrollTimeout);\n            }\n            \n            scrollTimeout = window.requestAnimationFrame(() => {\n                const nav = document.getElementById('main-nav');\n                if (nav) {\n                    if (window.scrollY > 100) {\n                        nav.classList.add('scrolled');\n                    } else {\n                        nav.classList.remove('scrolled');\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Show error message\n     */\n    showError(message) {\n        const errorHtml = `\n            <div class=\"empty-state\">\n                <div class=\"empty-state-icon\">\u26A0\uFE0F</div>\n                <div class=\"empty-state-text\">Error</div>\n                <div class=\"empty-state-subtext\">${message}</div>\n            </div>\n        `;\n        \n        // Try to find a suitable container\n        const container = document.getElementById('book-data') || \n                         document.querySelector('.container');\n        if (container) {\n            container.innerHTML = errorHtml;\n        } else {\n            console.error(message);\n        }\n    }\n}\n\n// Make available globally for non-module usage\nif (typeof window !== 'undefined') {\n    window.HubCore = HubCore;\n}\n\nexport default HubCore;"],
  "mappings": "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",
  "names": ["hub_core_exports", "__export", "hub_core_default", "HubCore", "options", "CharacterLoader", "error", "button", "e", "row", "anchor", "event", "section", "btn", "content", "targetContent", "category", "bookId", "target", "offsetTop", "loading", "dataEl", "data", "emptyMessage", "emptySubtext", "container", "bookName", "html", "women", "c", "named", "w", "unnamed", "char", "men", "unknown", "character", "hebrewText", "tags", "tag", "references", "meta", "href", "songLink", "lowerTag", "card", "index", "featuredGrid", "featured", "stat", "increment", "current", "timer", "toggle", "navLinks", "scrollTimeout", "nav", "message", "errorHtml"]
}
