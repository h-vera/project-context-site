{
  "version": 3,
  "sources": ["../../../assets/js/nav-component.js"],
  "sourcesContent": ["/**\n * Centralized Navigation Component\n * Path: /assets/js/nav-component.js\n * Purpose: Single source of truth for navigation across all pages\n * Version: 1.0.0\n */\n\nclass NavigationComponent {\n    constructor(options = {}) {\n        this.options = {\n            currentPage: options.currentPage || '',\n            hubType: options.hubType || '', // 'characters', 'women', 'tanakh', 'thematic'\n            ...options\n        };\n        \n        this.navHTML = this.getNavigationHTML();\n        this.init();\n    }\n\n    /**\n     * Get the complete navigation HTML\n     */\n    getNavigationHTML() {\n        return `\n            <nav id=\"main-nav\" role=\"navigation\" aria-label=\"Main navigation\">\n                <div class=\"nav-container\">\n                    <a href=\"/\" class=\"logo\">\n                        <div class=\"logo-icon\">\n                            <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\">\n                                <path d=\"M 25 15 L 10 15 L 10 85 L 25 85\" stroke=\"#0a0a0a\" stroke-width=\"4\" fill=\"none\" stroke-linecap=\"round\"/>\n                                <path d=\"M 75 15 L 90 15 L 90 85 L 75 85\" stroke=\"#0a0a0a\" stroke-width=\"4\" fill=\"none\" stroke-linecap=\"round\"/>\n                                <ellipse cx=\"50\" cy=\"50\" rx=\"25\" ry=\"15\" stroke=\"#0a0a0a\" stroke-width=\"3\" fill=\"none\"/>\n                                <circle cx=\"50\" cy=\"50\" r=\"8\" fill=\"#00b4d8\"/>\n                                <circle cx=\"50\" cy=\"50\" r=\"3\" fill=\"#0a0a0a\"/>\n                            </svg>\n                        </div>\n                        <span class=\"logo-text\">Project Context</span>\n                    </a>\n                    <ul class=\"nav-links\" id=\"navLinks\" aria-label=\"Main navigation\">\n                        <li><a href=\"/\" ${this.getActiveClass('home')}>Home</a></li>\n                        <li class=\"dropdown\">\n                            <a href=\"/studies/\" class=\"dropdown-toggle ${this.getActiveClass('studies')}\">Studies</a>\n                            <div class=\"dropdown-content\">\n                                <a href=\"/studies/characters/characters_hub.html\" ${this.getActiveClass('characters')}>Biblical Characters</a>\n                                <a href=\"/studies/women/women-bible-hub.html\" ${this.getActiveClass('women')}>Women in the Bible</a>\n                                <a href=\"/studies/tanakh/tanakh-hub.html\" ${this.getActiveClass('tanakh')}>Tanakh Studies</a>\n                                <a href=\"/studies/thematic/thematic-hub.html\" ${this.getActiveClass('thematic')}>Thematic Studies</a>\n                            </div>\n                        </li>\n                        <li class=\"dropdown\">\n                            <a href=\"/resources/\" class=\"dropdown-toggle ${this.getActiveClass('resources')}\">Resources</a>\n                            <div class=\"dropdown-content\">\n                                <a href=\"/resources/discussion-guides/\">Discussion Guides</a>\n                                <a href=\"/resources/study-tools/\">Study Tools</a>\n                                <a href=\"/resources/downloads/\">Downloads</a>\n                            </div>\n                        </li>\n                        <li><a href=\"/about/\" ${this.getActiveClass('about')}>About</a></li>\n                    </ul>\n                    <button class=\"mobile-menu-toggle\" id=\"mobileMenuToggle\" aria-label=\"Toggle navigation\" aria-expanded=\"false\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </button>\n                </div>\n            </nav>\n        `;\n    }\n\n    /**\n     * Determine if a nav item should be active\n     */\n    getActiveClass(section) {\n        const currentPage = this.options.currentPage;\n        const hubType = this.options.hubType;\n        \n        // Home page\n        if (section === 'home' && (currentPage === 'home' || currentPage === '')) {\n            return 'class=\"active\"';\n        }\n        \n        // Studies section (main dropdown)\n        if (section === 'studies' && (\n            currentPage.includes('studies') || \n            currentPage.includes('characters') || \n            currentPage.includes('women') || \n            currentPage.includes('tanakh') || \n            currentPage.includes('thematic')\n        )) {\n            return 'class=\"active\"';\n        }\n        \n        // Specific hub types\n        if (section === 'characters' && (hubType === 'characters' || currentPage.includes('characters'))) {\n            return 'class=\"active\"';\n        }\n        if (section === 'women' && (hubType === 'women' || currentPage.includes('women'))) {\n            return 'class=\"active\"';\n        }\n        if (section === 'tanakh' && (hubType === 'tanakh' || currentPage.includes('tanakh'))) {\n            return 'class=\"active\"';\n        }\n        if (section === 'thematic' && (hubType === 'thematic' || currentPage.includes('thematic'))) {\n            return 'class=\"active\"';\n        }\n        \n        // Other sections\n        if (section === 'resources' && currentPage.includes('resources')) {\n            return 'class=\"active\"';\n        }\n        if (section === 'about' && currentPage.includes('about')) {\n            return 'class=\"active\"';\n        }\n        \n        return '';\n    }\n\n    /**\n     * Initialize the navigation\n     */\n    init() {\n        // Wait for DOM to be ready\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', () => this.render());\n        } else {\n            this.render();\n        }\n    }\n\n    /**\n     * Render the navigation into the DOM\n     */\n    render() {\n        // Find existing nav or create container\n        let existingNav = document.getElementById('main-nav');\n        let navContainer;\n        \n        if (existingNav) {\n            // Replace existing nav\n            navContainer = existingNav.parentNode;\n            existingNav.remove();\n        } else {\n            // Create new container at top of body\n            navContainer = document.body;\n        }\n        \n        // Insert the navigation HTML\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = this.navHTML;\n        const newNav = tempDiv.firstElementChild;\n        \n        navContainer.insertBefore(newNav, navContainer.firstChild);\n        \n        // Initialize mobile menu functionality\n        this.initializeMobileMenu();\n        \n        // Initialize scroll effects\n        this.initializeScrollEffects();\n    }\n\n    /**\n     * Initialize mobile menu (consolidated from mobile-menu.js)\n     */\n    initializeMobileMenu() {\n        const menuToggle = document.getElementById('mobileMenuToggle');\n        const navLinks = document.getElementById('navLinks');\n        \n        if (!menuToggle || !navLinks) return;\n        \n        let scrollPosition = 0;\n        \n        // Create overlay if it doesn't exist\n        if (!document.querySelector('.mobile-menu-overlay')) {\n            const overlay = document.createElement('div');\n            overlay.className = 'mobile-menu-overlay';\n            document.body.appendChild(overlay);\n            \n            overlay.addEventListener('click', () => this.closeMobileMenu());\n        }\n        \n        // Toggle menu\n        menuToggle.addEventListener('click', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            \n            if (menuToggle.classList.contains('active')) {\n                this.closeMobileMenu();\n            } else {\n                this.openMobileMenu();\n            }\n        });\n        \n        // Close menu when clicking nav links (not dropdown toggles)\n        navLinks.querySelectorAll('a:not(.dropdown-toggle)').forEach(link => {\n            link.addEventListener('click', () => {\n                // Don't close for hash links to current page\n                const href = link.getAttribute('href');\n                if (href && href !== '#' && !href.startsWith('#')) {\n                    this.closeMobileMenu();\n                }\n            });\n        });\n        \n        // Handle dropdowns in mobile menu\n        navLinks.querySelectorAll('.dropdown-toggle').forEach(toggle => {\n            toggle.addEventListener('click', (e) => {\n                if (window.matchMedia('(max-width: 768px)').matches) {\n                    e.preventDefault();\n                    const dropdown = toggle.parentElement;\n                    dropdown.classList.toggle('active');\n                }\n            });\n        });\n        \n        // Close on escape key\n        document.addEventListener('keydown', (e) => {\n            if (e.key === 'Escape' && menuToggle.classList.contains('active')) {\n                this.closeMobileMenu();\n            }\n        });\n        \n        // Close on window resize\n        window.addEventListener('resize', () => {\n            if (window.innerWidth > 768 && menuToggle.classList.contains('active')) {\n                this.closeMobileMenu();\n            }\n        });\n    }\n\n    openMobileMenu() {\n        const menuToggle = document.getElementById('mobileMenuToggle');\n        const navLinks = document.getElementById('navLinks');\n        const overlay = document.querySelector('.mobile-menu-overlay');\n        \n        // Save scroll position\n        this.scrollPosition = window.pageYOffset || document.documentElement.scrollTop;\n        \n        menuToggle.classList.add('active');\n        navLinks.classList.add('active');\n        overlay?.classList.add('active');\n        document.body.classList.add('menu-open');\n        \n        // Prevent background scrolling (iOS fix)\n        document.body.style.position = 'fixed';\n        document.body.style.width = '100%';\n        document.body.style.top = `-${this.scrollPosition}px`;\n        document.body.style.overflow = 'hidden';\n        \n        menuToggle.setAttribute('aria-expanded', 'true');\n        navLinks.setAttribute('aria-hidden', 'false');\n    }\n\n    closeMobileMenu() {\n        const menuToggle = document.getElementById('mobileMenuToggle');\n        const navLinks = document.getElementById('navLinks');\n        const overlay = document.querySelector('.mobile-menu-overlay');\n        \n        if (!menuToggle.classList.contains('active')) return;\n        \n        menuToggle.classList.remove('active');\n        navLinks.classList.remove('active');\n        overlay?.classList.remove('active');\n        document.body.classList.remove('menu-open');\n        \n        // Restore background scrolling\n        document.body.style.position = '';\n        document.body.style.width = '';\n        document.body.style.top = '';\n        document.body.style.overflow = '';\n        \n        // Restore scroll position\n        if (this.scrollPosition) {\n            window.scrollTo(0, this.scrollPosition);\n        }\n        \n        menuToggle.setAttribute('aria-expanded', 'false');\n        navLinks.setAttribute('aria-hidden', 'true');\n    }\n\n    /**\n     * Initialize scroll effects\n     */\n    initializeScrollEffects() {\n        let scrollTimeout;\n        \n        window.addEventListener('scroll', () => {\n            if (scrollTimeout) {\n                window.cancelAnimationFrame(scrollTimeout);\n            }\n            \n            scrollTimeout = window.requestAnimationFrame(() => {\n                const nav = document.getElementById('main-nav');\n                if (nav) {\n                    if (window.scrollY > 100) {\n                        nav.classList.add('scrolled');\n                    } else {\n                        nav.classList.remove('scrolled');\n                    }\n                }\n            });\n        }, { passive: true });\n    }\n\n    /**\n     * Update navigation for current page (can be called after page load)\n     */\n    updateCurrentPage(currentPage, hubType = '') {\n        this.options.currentPage = currentPage;\n        this.options.hubType = hubType;\n        this.navHTML = this.getNavigationHTML();\n        this.render();\n    }\n}\n\n// Auto-initialize function for easy use\nwindow.initializeNavigation = function(options = {}) {\n    return new NavigationComponent(options);\n};\n\n// Export for ES6 modules\nexport default NavigationComponent;"],
  "mappings": "obAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAOA,MAAMC,CAAoB,CACtB,YAAYC,EAAU,CAAC,EAAG,CACtB,KAAK,QAAU,CACX,YAAaA,EAAQ,aAAe,GACpC,QAASA,EAAQ,SAAW,GAC5B,GAAGA,CACP,EAEA,KAAK,QAAU,KAAK,kBAAkB,EACtC,KAAK,KAAK,CACd,CAKA,mBAAoB,CAChB,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAgB2B,KAAK,eAAe,MAAM,CAAC;AAAA;AAAA,yEAEI,KAAK,eAAe,SAAS,CAAC;AAAA;AAAA,oFAEnB,KAAK,eAAe,YAAY,CAAC;AAAA,gFACrC,KAAK,eAAe,OAAO,CAAC;AAAA,4EAChC,KAAK,eAAe,QAAQ,CAAC;AAAA,gFACzB,KAAK,eAAe,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA,2EAIpC,KAAK,eAAe,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAO3D,KAAK,eAAe,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUxE,CAKA,eAAeC,EAAS,CACpB,MAAMC,EAAc,KAAK,QAAQ,YAC3BC,EAAU,KAAK,QAAQ,QAoC7B,OAjCIF,IAAY,SAAWC,IAAgB,QAAUA,IAAgB,KAKjED,IAAY,YACZC,EAAY,SAAS,SAAS,GAC9BA,EAAY,SAAS,YAAY,GACjCA,EAAY,SAAS,OAAO,GAC5BA,EAAY,SAAS,QAAQ,GAC7BA,EAAY,SAAS,UAAU,IAM/BD,IAAY,eAAiBE,IAAY,cAAgBD,EAAY,SAAS,YAAY,IAG1FD,IAAY,UAAYE,IAAY,SAAWD,EAAY,SAAS,OAAO,IAG3ED,IAAY,WAAaE,IAAY,UAAYD,EAAY,SAAS,QAAQ,IAG9ED,IAAY,aAAeE,IAAY,YAAcD,EAAY,SAAS,UAAU,IAKpFD,IAAY,aAAeC,EAAY,SAAS,WAAW,GAG3DD,IAAY,SAAWC,EAAY,SAAS,OAAO,EAC5C,iBAGJ,EACX,CAKA,MAAO,CAEC,SAAS,aAAe,UACxB,SAAS,iBAAiB,mBAAoB,IAAM,KAAK,OAAO,CAAC,EAEjE,KAAK,OAAO,CAEpB,CAKA,QAAS,CAEL,IAAIE,EAAc,SAAS,eAAe,UAAU,EAChDC,EAEAD,GAEAC,EAAeD,EAAY,WAC3BA,EAAY,OAAO,GAGnBC,EAAe,SAAS,KAI5B,MAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,KAAK,QACzB,MAAMC,EAASD,EAAQ,kBAEvBD,EAAa,aAAaE,EAAQF,EAAa,UAAU,EAGzD,KAAK,qBAAqB,EAG1B,KAAK,wBAAwB,CACjC,CAKA,sBAAuB,CACnB,MAAMG,EAAa,SAAS,eAAe,kBAAkB,EACvDC,EAAW,SAAS,eAAe,UAAU,EAEnD,GAAI,CAACD,GAAc,CAACC,EAAU,OAE9B,IAAIC,EAAiB,EAGrB,GAAI,CAAC,SAAS,cAAc,sBAAsB,EAAG,CACjD,MAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,sBACpB,SAAS,KAAK,YAAYA,CAAO,EAEjCA,EAAQ,iBAAiB,QAAS,IAAM,KAAK,gBAAgB,CAAC,CAClE,CAGAH,EAAW,iBAAiB,QAAUI,GAAM,CACxCA,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAEdJ,EAAW,UAAU,SAAS,QAAQ,EACtC,KAAK,gBAAgB,EAErB,KAAK,eAAe,CAE5B,CAAC,EAGDC,EAAS,iBAAiB,yBAAyB,EAAE,QAAQI,GAAQ,CACjEA,EAAK,iBAAiB,QAAS,IAAM,CAEjC,MAAMC,EAAOD,EAAK,aAAa,MAAM,EACjCC,GAAQA,IAAS,KAAO,CAACA,EAAK,WAAW,GAAG,GAC5C,KAAK,gBAAgB,CAE7B,CAAC,CACL,CAAC,EAGDL,EAAS,iBAAiB,kBAAkB,EAAE,QAAQM,GAAU,CAC5DA,EAAO,iBAAiB,QAAUH,GAAM,CAChC,OAAO,WAAW,oBAAoB,EAAE,UACxCA,EAAE,eAAe,EACAG,EAAO,cACf,UAAU,OAAO,QAAQ,EAE1C,CAAC,CACL,CAAC,EAGD,SAAS,iBAAiB,UAAYH,GAAM,CACpCA,EAAE,MAAQ,UAAYJ,EAAW,UAAU,SAAS,QAAQ,GAC5D,KAAK,gBAAgB,CAE7B,CAAC,EAGD,OAAO,iBAAiB,SAAU,IAAM,CAChC,OAAO,WAAa,KAAOA,EAAW,UAAU,SAAS,QAAQ,GACjE,KAAK,gBAAgB,CAE7B,CAAC,CACL,CAEA,gBAAiB,CACb,MAAMA,EAAa,SAAS,eAAe,kBAAkB,EACvDC,EAAW,SAAS,eAAe,UAAU,EAC7CE,EAAU,SAAS,cAAc,sBAAsB,EAG7D,KAAK,eAAiB,OAAO,aAAe,SAAS,gBAAgB,UAErEH,EAAW,UAAU,IAAI,QAAQ,EACjCC,EAAS,UAAU,IAAI,QAAQ,EAC/BE,GAAS,UAAU,IAAI,QAAQ,EAC/B,SAAS,KAAK,UAAU,IAAI,WAAW,EAGvC,SAAS,KAAK,MAAM,SAAW,QAC/B,SAAS,KAAK,MAAM,MAAQ,OAC5B,SAAS,KAAK,MAAM,IAAM,IAAI,KAAK,cAAc,KACjD,SAAS,KAAK,MAAM,SAAW,SAE/BH,EAAW,aAAa,gBAAiB,MAAM,EAC/CC,EAAS,aAAa,cAAe,OAAO,CAChD,CAEA,iBAAkB,CACd,MAAMD,EAAa,SAAS,eAAe,kBAAkB,EACvDC,EAAW,SAAS,eAAe,UAAU,EAC7CE,EAAU,SAAS,cAAc,sBAAsB,EAExDH,EAAW,UAAU,SAAS,QAAQ,IAE3CA,EAAW,UAAU,OAAO,QAAQ,EACpCC,EAAS,UAAU,OAAO,QAAQ,EAClCE,GAAS,UAAU,OAAO,QAAQ,EAClC,SAAS,KAAK,UAAU,OAAO,WAAW,EAG1C,SAAS,KAAK,MAAM,SAAW,GAC/B,SAAS,KAAK,MAAM,MAAQ,GAC5B,SAAS,KAAK,MAAM,IAAM,GAC1B,SAAS,KAAK,MAAM,SAAW,GAG3B,KAAK,gBACL,OAAO,SAAS,EAAG,KAAK,cAAc,EAG1CH,EAAW,aAAa,gBAAiB,OAAO,EAChDC,EAAS,aAAa,cAAe,MAAM,EAC/C,CAKA,yBAA0B,CACtB,IAAIO,EAEJ,OAAO,iBAAiB,SAAU,IAAM,CAChCA,GACA,OAAO,qBAAqBA,CAAa,EAG7CA,EAAgB,OAAO,sBAAsB,IAAM,CAC/C,MAAMC,EAAM,SAAS,eAAe,UAAU,EAC1CA,IACI,OAAO,QAAU,IACjBA,EAAI,UAAU,IAAI,UAAU,EAE5BA,EAAI,UAAU,OAAO,UAAU,EAG3C,CAAC,CACL,EAAG,CAAE,QAAS,EAAK,CAAC,CACxB,CAKA,kBAAkBf,EAAaC,EAAU,GAAI,CACzC,KAAK,QAAQ,YAAcD,EAC3B,KAAK,QAAQ,QAAUC,EACvB,KAAK,QAAU,KAAK,kBAAkB,EACtC,KAAK,OAAO,CAChB,CACJ,CAGA,OAAO,qBAAuB,SAASH,EAAU,CAAC,EAAG,CACjD,OAAO,IAAID,EAAoBC,CAAO,CAC1C,EAGA,IAAOF,EAAQC",
  "names": ["nav_component_exports", "__export", "nav_component_default", "NavigationComponent", "options", "section", "currentPage", "hubType", "existingNav", "navContainer", "tempDiv", "newNav", "menuToggle", "navLinks", "scrollPosition", "overlay", "e", "link", "href", "toggle", "scrollTimeout", "nav"]
}
